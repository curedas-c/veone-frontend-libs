"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9620],{876:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),d=o,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4997:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=r(7896),o=r(1461),a=(r(2784),r(876)),i=["components"],s={sidebar_position:2},l=void 0,c={unversionedId:"ngx-veone/Utilitaires RxJS",id:"ngx-veone/Utilitaires RxJS",title:"Utilitaires RxJS",description:"Des op\xe9rateurs RxJS personnalis\xe9s, qui rajoutent ou combinent des op\xe9rateurs existants.",source:"@site/docs/ngx-veone/Utilitaires RxJS.md",sourceDirName:"ngx-veone",slug:"/ngx-veone/Utilitaires RxJS",permalink:"/veone-frontend-libs/docs/ngx-veone/Utilitaires RxJS",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/ngx-veone/Utilitaires RxJS.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/veone-frontend-libs/docs/ngx-veone/Introduction"},next:{title:"Fonctions",permalink:"/veone-frontend-libs/docs/category/fonctions"}},u={},p=[{value:"ofDelay",id:"ofdelay",level:3}],m={toc:p};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Des op\xe9rateurs RxJS personnalis\xe9s, qui rajoutent ou combinent des op\xe9rateurs existants."),(0,a.kt)("h3",{id:"ofdelay"},"ofDelay"),(0,a.kt)("p",null,"Une combinaison des op\xe9rateurs rxjs ",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"of"),".\nL'op\xe9rateur retourne la valeur pass\xe9e en param\xeatre apr\xe8s un temps d\xe9finit (millisecondes)."),(0,a.kt)("p",null,"Cela peux s'av\xe9rer utile lors de l'utilisation de mocks o\xfb l'on souhaite simuler un delai de chargement."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="./user.service.mock.ts"',title:'"./user.service.mock.ts"'},"import { ofDelay } from 'ngx-veone';\nimport { faker } from '@faker-js/faker';\nimport { User } from '@shared/models/auth.models';\n\nexport const USER_MOCK: User = {\n  id: faker.random.alphaNumeric(),\n  username: faker.internet.email(),\n  firstName: faker.name.firstName(),\n  lastName: faker.name.lastName()\n};\n\n@Injectable()\nexport class UserMockService extends UserService {\n  override logUser(...args: unknown) {\n    return ofDelay(USER_MOCK, 3000);\n  }\n}\n")))}d.isMDXComponent=!0}}]);